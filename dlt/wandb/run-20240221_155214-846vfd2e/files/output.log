
Epoch 0:   4%|████▏                                                                                              | 2/47 [00:00<00:38,  1.16it/s, loss=0.784, lr=2e-7, step=2]
#############################################################
batch:  {'geometry': tensor([[[0.2395, 0.5742, 0.4792, 0.8519, 0.0000, 0.0000],
         [0.6346, 0.8181, 0.2047, 0.3639, 0.0000, 0.0625],
         [0.8237, 0.7554, 0.2401, 0.2926, 0.0000, 0.1250],
         ...,
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000]],
        [[0.7598, 0.9110, 0.3771, 0.0574, 0.0000, 0.0000],
         [0.7361, 0.0876, 0.4229, 0.0481, 0.0000, 0.0833],
         [0.3489, 0.1654, 0.6187, 0.2074, 0.0000, 0.1667],
         ...,
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000]],
        [[0.7170, 0.5111, 0.4339, 0.7333, 0.0000, 0.0000],
         [0.2603, 0.6259, 0.3161, 0.1222, 0.0000, 0.2000],
         [0.2765, 0.4256, 0.3703, 0.3167, 0.0000, 0.4000],
         ...,
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000]],
        ...,
        [[0.7970, 0.5000, 0.4062, 1.0000, 0.0000, 0.0000],
         [0.7970, 0.5000, 0.2266, 0.6333, 0.0000, 0.1667],
         [0.1773, 0.3405, 0.2208, 0.1250, 0.0000, 0.3333],
         ...,
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000]],
        [[0.5000, 0.5000, 1.0000, 1.0000, 0.0000, 0.0000],
         [0.5215, 0.2628, 0.1167, 0.1991, 0.0000, 0.0769],
         [0.8870, 0.4997, 0.0865, 0.1935, 0.0000, 0.1538],
         ...,
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000]],
        [[0.1136, 0.2019, 0.1146, 0.2037, 0.0000, 0.0000],
         [0.3293, 0.4734, 0.1146, 0.2037, 0.0000, 0.1000],
         [0.5440, 0.7443, 0.1146, 0.2037, 0.0000, 0.2000],
         ...,
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000]]], device='cuda:0'), 'image_features': tensor([[[ 0.2761,  0.0120,  0.0865,  ..., -0.3310,  0.0898,  0.3834],
         [-0.1189, -0.0627, -0.0256,  ...,  0.4884, -0.2905,  0.2726],
         [ 0.1865, -0.2264, -0.0953,  ...,  0.7930, -0.0666, -0.1364],
         ...,
         [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],
        [[-0.0363, -0.0312, -0.1473,  ...,  0.5788, -0.1959, -0.0308],
         [-0.1880,  0.1401, -0.0726,  ...,  0.7097, -0.0593,  0.0732],
         [-0.1503, -0.2634, -0.5655,  ...,  0.7723, -0.3643, -0.2934],
         ...,
         [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],
        [[ 0.0556, -0.2561, -0.1824,  ...,  1.0576, -0.0367, -0.2187],
         [ 0.1074, -0.1308, -0.2869,  ...,  0.2956, -0.2062, -0.2910],
         [ 0.1787, -0.2319, -0.1773,  ...,  0.4907,  0.1052,  0.1220],
         ...,
         [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],
        ...,
        [[-0.1130, -0.2156,  0.0660,  ...,  0.8746,  0.0528, -0.2826],
         [ 0.0654,  0.4870,  0.0318,  ..., -0.0501,  0.3991,  0.3706],
         [-0.1503, -0.2634, -0.5655,  ...,  0.7723, -0.3643, -0.2934],
         ...,
         [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],
        [[ 0.1279, -0.2139,  0.3428,  ...,  0.7574, -0.1052, -0.3979],
         [-0.0959,  0.1584, -0.0298,  ...,  0.1027, -0.0657, -0.2056],
         [ 0.1164, -0.1782, -0.0330,  ...,  0.7681, -0.0295,  0.0470],
         ...,
         [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],
        [[ 0.0747, -0.1887, -0.2233,  ...,  0.8055,  0.0284, -0.2185],
         [ 0.0747, -0.1887, -0.2233,  ...,  0.8055,  0.0284, -0.2185],
         [ 0.0747, -0.1887, -0.2233,  ...,  0.8055,  0.0284, -0.2185],
         ...,
         [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]],
       device='cuda:0'), 'padding_mask': tensor([[[1, 1, 1, 1, 1, 1],
         [1, 1, 1, 1, 1, 1],
         [1, 1, 1, 1, 1, 1],
         ...,
         [0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0]],
        [[1, 1, 1, 1, 1, 1],
         [1, 1, 1, 1, 1, 1],
         [1, 1, 1, 1, 1, 1],
         ...,
         [0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0]],
        [[1, 1, 1, 1, 1, 1],
         [1, 1, 1, 1, 1, 1],
         [1, 1, 1, 1, 1, 1],
         ...,
         [0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0]],
        ...,
        [[1, 1, 1, 1, 1, 1],
         [1, 1, 1, 1, 1, 1],
         [1, 1, 1, 1, 1, 1],
         ...,
         [0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0]],
        [[1, 1, 1, 1, 1, 1],
         [1, 1, 1, 1, 1, 1],
         [1, 1, 1, 1, 1, 1],
         ...,
         [0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0]],
        [[1, 1, 1, 1, 1, 1],
         [1, 1, 1, 1, 1, 1],
         [1, 1, 1, 1, 1, 1],
         ...,
         [0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0]]], device='cuda:0', dtype=torch.int32), 'type_num': tensor([5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
        5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
        5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], device='cuda:0')}
#############################################################
#############################################################
batch:  {'geometry': tensor([[[0.5000, 0.4346, 0.7823, 0.2296, 0.0000, 0.0000],
         [0.5000, 0.6286, 0.3250, 0.0787, 0.0000, 0.5000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000]],
        [[0.2667, 0.5032, 0.3693, 0.3167, 0.0000, 0.0000],
         [0.6905, 0.6304, 0.2719, 0.1361, 0.0000, 0.1429],
         [0.6905, 0.1912, 0.2719, 0.1750, 0.0000, 0.2857],
         ...,
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000]],
        [[0.5000, 0.5000, 1.0000, 1.0000, 0.0000, 0.0000],
         [0.2683, 0.4841, 0.4474, 0.1472, 0.0000, 0.1250],
         [0.2438, 0.6952, 0.3953, 0.3139, 0.0000, 0.2500],
         ...,
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000]],
        ...,
        [[0.5000, 0.1380, 0.6281, 0.1556, 0.0000, 0.0000],
         [0.5000, 0.8402, 0.1990, 0.1204, 0.0000, 0.2500],
         [0.1327, 0.8092, 0.2500, 0.4315, 0.9680, 0.5000],
         ...,
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000]],
        [[0.7906, 0.3534, 0.3063, 0.5000, 0.0000, 0.0000],
         [0.5246, 0.3534, 0.2255, 0.5000, 0.0000, 0.1667],
         [0.6375, 0.8184, 0.4849, 0.2083, 0.0000, 0.3333],
         ...,
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000]],
        [[0.5000, 0.5000, 1.0000, 1.0000, 0.0000, 0.0000],
         [0.4381, 0.7417, 0.2479, 0.1361, 0.0000, 0.1000],
         [0.2879, 0.5181, 0.0938, 1.0444, 0.0000, 0.2000],
         ...,
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000]]], device='cuda:0'), 'image_features': tensor([[[-0.1792, -0.1067, -0.2423,  ...,  0.5287, -0.3529, -0.3618],
         [-0.2487,  0.4561, -0.0216,  ...,  0.7521,  0.0334, -0.1573],
         [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],
        [[ 0.2144, -0.1279, -0.1045,  ...,  0.5734,  0.0597,  0.0500],
         [ 0.3565,  0.1113, -0.0407,  ...,  0.2968, -0.4668, -0.0707],
         [ 0.0530,  0.0391,  0.4138,  ...,  0.1988, -0.3059, -0.3892],
         ...,
         [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],
        [[-0.2064, -0.1150, -0.1157,  ...,  1.3161, -0.0821, -0.2686],
         [-0.0529, -0.0644,  0.1343,  ...,  0.5738, -0.2712, -0.0074],
         [ 0.0194,  0.2688, -0.1933,  ...,  0.8560, -0.1543, -0.1175],
         ...,
         [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],
        ...,
        [[-0.4689, -0.0346,  0.2185,  ...,  0.3944,  0.2707,  0.4435],
         [-0.1095,  0.0316,  0.0260,  ...,  0.7115, -0.1206, -0.2611],
         [ 0.1640,  0.1934, -0.3002,  ...,  0.3941, -0.0253, -0.0641],
         ...,
         [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],
        [[-0.1457, -0.0298,  0.3130,  ..., -0.0741,  0.2654, -0.2189],
         [-0.3785, -0.1639, -0.0186,  ...,  0.6379, -0.0708, -0.1208],
         [-0.1503, -0.2634, -0.5655,  ...,  0.7723, -0.3643, -0.2934],
         ...,
         [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],
        [[-0.1951, -0.1375, -0.0583,  ...,  1.6020, -0.1848, -0.2632],
         [ 0.1813, -0.0919,  0.0256,  ...,  0.3370, -0.1742, -0.0516],
         [ 0.1232, -0.0913, -0.1932,  ...,  0.3841,  0.0206,  0.0895],
         ...,
         [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]],
       device='cuda:0'), 'padding_mask': tensor([[[1, 1, 1, 1, 1, 1],
         [1, 1, 1, 1, 1, 1],
         [0, 0, 0, 0, 0, 0],
         ...,
         [0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0]],
        [[1, 1, 1, 1, 1, 1],
         [1, 1, 1, 1, 1, 1],
         [1, 1, 1, 1, 1, 1],
         ...,
         [0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0]],
        [[1, 1, 1, 1, 1, 1],
         [1, 1, 1, 1, 1, 1],
         [1, 1, 1, 1, 1, 1],
         ...,
         [0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0]],
        ...,
        [[1, 1, 1, 1, 1, 1],
         [1, 1, 1, 1, 1, 1],
         [1, 1, 1, 1, 1, 1],
         ...,
         [0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0]],
        [[1, 1, 1, 1, 1, 1],
         [1, 1, 1, 1, 1, 1],
         [1, 1, 1, 1, 1, 1],
         ...,
         [0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0]],
        [[1, 1, 1, 1, 1, 1],
         [1, 1, 1, 1, 1, 1],
         [1, 1, 1, 1, 1, 1],
         ...,
         [0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0]]], device='cuda:0', dtype=torch.int32), 'type_num': tensor([5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
        5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
        5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], device='cuda:0')}
#############################################################
#############################################################
batch:  {'geometry': tensor([[[1.8982e-01, 1.8221e-01, 3.7969e-01, 8.1204e-01, 0.0000e+00,
          0.0000e+00],
         [5.0000e-01, 5.0000e-01, 6.8906e-01, 5.7685e-01, 0.0000e+00,
          1.6667e-01],
         [6.8884e-02, 5.7988e-01, 3.6979e-02, 8.6111e-02, 0.0000e+00,
          3.3333e-01],
         ...,
         [0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
          0.0000e+00],
         [0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
          0.0000e+00],
         [0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
          0.0000e+00]],
        [[5.0000e-01, 5.0000e-01, 1.0000e+00, 1.0000e+00, 0.0000e+00,
          0.0000e+00],
         [3.6372e-01, 8.1790e-01, 7.5052e-01, 4.5370e-01, 0.0000e+00,
          1.6667e-01],
         [6.5972e-01, 1.1101e+00, 4.0000e-01, 1.8056e-01, 7.5000e-01,
          3.3333e-01],
         ...,
         [0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
          0.0000e+00],
         [0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
          0.0000e+00],
         [0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
          0.0000e+00]],
        [[8.6125e-01, 5.8091e-01, 4.6823e-01, 1.3130e+00, 4.3449e-02,
          0.0000e+00],
         [4.5324e-01, 5.6368e-01, 2.3646e-01, 4.2037e-01, 0.0000e+00,
          9.0909e-02],
         [4.5532e-01, 4.6453e-01, 1.0000e-01, 2.0833e-01, 0.0000e+00,
          1.8182e-01],
         ...,
         [0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
          0.0000e+00],
         [0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
          0.0000e+00],
         [0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
          0.0000e+00]],
        ...,
        [[9.4375e-01, 8.8223e-01, 1.0521e-01, 2.7407e-01, 9.3981e-01,
          0.0000e+00],
         [5.1121e-02, 7.1292e-02, 2.1354e-02, 9.2593e-03, 0.0000e+00,
          5.5556e-02],
         [1.9200e-01, 4.8488e-01, 8.9583e-02, 9.2593e-04, 5.0000e-01,
          1.1111e-01],
         ...,
         [5.0000e-01, 2.4919e-01, 4.0312e-01, 1.9537e-01, 0.0000e+00,
          9.4444e-01],
         [0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
          0.0000e+00],
         [0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
          0.0000e+00]],
        [[5.0000e-01, 9.6633e-01, 1.0562e+00, 7.0278e-01, 0.0000e+00,
          0.0000e+00],
         [5.0000e-01, 3.4202e-01, 6.8750e-02, 1.2500e-01, 0.0000e+00,
          1.6667e-01],
         [5.0000e-01, 5.4035e-01, 4.4271e-01, 2.6111e-01, 0.0000e+00,
          3.3333e-01],
         ...,
         [0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
          0.0000e+00],
         [0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
          0.0000e+00],
         [0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
          0.0000e+00]],
        [[1.5603e-01, 2.3749e-01, 4.6823e-01, 4.7500e-01, 0.0000e+00,
          0.0000e+00],
         [7.9568e-01, 5.3371e-01, 2.9635e-01, 9.4444e-02, 0.0000e+00,
          1.1111e-01],
         [9.4375e-01, 8.9395e-01, 4.6771e-01, 4.7500e-01, 0.0000e+00,
          2.2222e-01],
         ...,
         [0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
          0.0000e+00],
         [0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
          0.0000e+00],
         [0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
          0.0000e+00]]], device='cuda:0'), 'image_features': tensor([[[ 1.1255e-01, -1.2156e-01,  1.3558e-01,  ..., -2.8433e-02,
          -8.8147e-02, -3.6010e-01],
         [-2.3807e-01,  4.3542e-01,  9.8251e-02,  ...,  7.4118e-02,
           8.5594e-02, -1.1366e-01],
         [ 2.8398e-01,  1.1740e-01, -1.8254e-01,  ...,  7.1851e-01,
          -2.2760e-01, -3.2838e-01],
         ...,
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
           0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
           0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
           0.0000e+00,  0.0000e+00]],
        [[-5.8392e-01,  3.3781e-01,  5.8007e-02,  ...,  5.4266e-01,
           2.7160e-02, -2.4363e-01],
         [ 2.0560e-01, -1.2707e-01, -6.9408e-02,  ...,  6.4443e-01,
          -3.6255e-02,  8.5687e-02],
         [-8.1458e-02, -2.7203e-01,  3.6761e-02,  ...,  4.8361e-01,
          -2.3792e-01,  1.3144e-01],
         ...,
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
           0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
           0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
           0.0000e+00,  0.0000e+00]],
        [[ 4.6488e-02, -1.6390e-01,  1.1974e-01,  ...,  7.0922e-01,
          -2.8014e-01, -2.9679e-01],
         [ 3.0172e-02,  3.7986e-02,  2.2216e-01,  ...,  4.2582e-01,
           1.7979e-01, -3.0459e-01],
         [-1.5035e-01, -2.6339e-01, -5.6551e-01,  ...,  7.7229e-01,
          -3.6434e-01, -2.9339e-01],
         ...,
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
           0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
           0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
           0.0000e+00,  0.0000e+00]],
        ...,
        [[-1.5035e-01, -2.6339e-01, -5.6551e-01,  ...,  7.7229e-01,
          -3.6434e-01, -2.9339e-01],
         [ 1.3232e-01,  8.1920e-02, -1.1425e-01,  ...,  7.2553e-01,
          -2.2788e-02, -1.0017e-01],
         [ 1.7680e-01, -1.5864e-01, -6.4040e-02,  ...,  4.3768e-01,
           1.5092e-02, -1.2685e-01],
         ...,
         [-3.1086e-03, -2.7298e-02, -3.7304e-01,  ...,  8.6356e-01,
           1.0803e-01,  2.9373e-01],
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
           0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
           0.0000e+00,  0.0000e+00]],
        [[ 7.0102e-02, -1.0058e-01, -6.2541e-02,  ...,  5.0362e-01,
           2.9795e-01, -1.5397e-01],
         [ 3.8657e-01, -1.8590e-01, -1.4563e-01,  ...,  7.2766e-01,
           2.2760e-01, -7.4945e-03],
         [ 5.2017e-04, -8.8867e-02, -5.0911e-01,  ...,  7.5793e-01,
          -3.9348e-01,  1.1496e-01],
         ...,
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
           0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
           0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
           0.0000e+00,  0.0000e+00]],
        [[ 8.5922e-03, -1.5486e-01,  8.4599e-02,  ...,  3.6026e-01,
           2.5710e-01, -2.1744e-01],
         [-6.0930e-02,  3.7771e-01, -1.2726e-01,  ...,  1.6877e-01,
           3.5792e-01,  2.3277e-01],
         [-3.5889e-03, -1.5228e-01,  8.8602e-02,  ...,  3.6033e-01,
           2.5448e-01, -2.2200e-01],
         ...,
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
           0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
           0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
           0.0000e+00,  0.0000e+00]]], device='cuda:0'), 'padding_mask': tensor([[[1, 1, 1, 1, 1, 1],
         [1, 1, 1, 1, 1, 1],
         [1, 1, 1, 1, 1, 1],
         ...,
         [0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0]],
        [[1, 1, 1, 1, 1, 1],
         [1, 1, 1, 1, 1, 1],
         [1, 1, 1, 1, 1, 1],
         ...,
         [0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0]],
        [[1, 1, 1, 1, 1, 1],
         [1, 1, 1, 1, 1, 1],
         [1, 1, 1, 1, 1, 1],
         ...,
         [0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0]],
        ...,
        [[1, 1, 1, 1, 1, 1],
         [1, 1, 1, 1, 1, 1],
         [1, 1, 1, 1, 1, 1],
         ...,
         [1, 1, 1, 1, 1, 1],
         [0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0]],
        [[1, 1, 1, 1, 1, 1],
         [1, 1, 1, 1, 1, 1],
         [1, 1, 1, 1, 1, 1],
         ...,
         [0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0]],
        [[1, 1, 1, 1, 1, 1],
         [1, 1, 1, 1, 1, 1],
         [1, 1, 1, 1, 1, 1],
         ...,
         [0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0]]], device='cuda:0', dtype=torch.int32), 'type_num': tensor([5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
        5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
        5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], device='cuda:0')}
Epoch 0:   4%|████▏                                                                                              | 2/47 [00:00<00:38,  1.16it/s, loss=0.784, lr=2e-7, step=2]Traceback (most recent call last):
  File "/home/mineslab-ubuntu/KDH_CAL2/dlt/main.py", line 119, in <module>
    app.run(main)
  File "/home/mineslab-ubuntu/anaconda3/envs/DLT/lib/python3.9/site-packages/absl/app.py", line 308, in run
    _run_main(main, args)
  File "/home/mineslab-ubuntu/anaconda3/envs/DLT/lib/python3.9/site-packages/absl/app.py", line 254, in _run_main
    sys.exit(main(argv))
  File "/home/mineslab-ubuntu/KDH_CAL2/dlt/main.py", line 94, in main
    TrainLoopCAL(accelerator=accelerator, model=model, diffusion=noise_scheduler,
  File "/home/mineslab-ubuntu/KDH_CAL2/dlt/trainers/cal_trainer2.py", line 148, in train
    self.train_epoch_CAL(epoch)
  File "/home/mineslab-ubuntu/KDH_CAL2/dlt/trainers/cal_trainer2.py", line 211, in train_epoch_CAL
    geometry_predict = self.model(batch, noisy_batch, t)
  File "/home/mineslab-ubuntu/anaconda3/envs/DLT/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/mineslab-ubuntu/KDH_CAL2/dlt/models/CAL.py", line 109, in forward
    output = self.seqTransEncoder(xseq)[1:] #time step embedding 제외
  File "/home/mineslab-ubuntu/anaconda3/envs/DLT/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/mineslab-ubuntu/anaconda3/envs/DLT/lib/python3.9/site-packages/torch/nn/modules/transformer.py", line 280, in forward
    output = mod(output, src_mask=mask, src_key_padding_mask=src_key_padding_mask_for_layers)
  File "/home/mineslab-ubuntu/anaconda3/envs/DLT/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/mineslab-ubuntu/anaconda3/envs/DLT/lib/python3.9/site-packages/torch/nn/modules/transformer.py", line 539, in forward
    x = self.norm2(x + self._ff_block(x))
  File "/home/mineslab-ubuntu/anaconda3/envs/DLT/lib/python3.9/site-packages/torch/nn/modules/transformer.py", line 554, in _ff_block
    x = self.linear2(self.dropout(self.activation(self.linear1(x))))
  File "/home/mineslab-ubuntu/anaconda3/envs/DLT/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/mineslab-ubuntu/anaconda3/envs/DLT/lib/python3.9/site-packages/torch/nn/modules/linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
KeyboardInterrupt